name: PR Labels

on:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]

jobs:
  label-pr:
    name: Auto-label PR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Detect and add labels
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title || '';
            const body = pr.body || '';
            const fullText = `${title} ${body}`.toLowerCase();
            
            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}';
            const labels = [];
            
            // Check for dependencies
            if (changedFiles.includes('composer.json') || changedFiles.includes('composer.lock') || changedFiles.includes('vendor/')) {
              labels.push('dependencies');
            }
            
            // Check for documentation
            if (fullText.includes('doc') || fullText.includes('readme') || fullText.includes('changelog') || 
                /\.(md|rst|txt)$/.test(changedFiles)) {
              labels.push('documentation');
            }
            
            // Check for bug fixes
            if (fullText.includes('fix') || fullText.includes('bug') || fullText.includes('error') || fullText.includes('issue')) {
              labels.push('bug');
            }
            // Check for features
            else if (fullText.includes('feat') || fullText.includes('feature') || fullText.includes('add') || fullText.includes('new')) {
              labels.push('enhancement');
            }
            
            // Check for rule changes
            if (changedFiles.includes('rules/')) {
              labels.push('rules');
            }
            
            // Check for build changes
            if (changedFiles.includes('build/') || changedFiles.includes('rector.php')) {
              labels.push('build');
            }
            
            // Remove duplicates
            const uniqueLabels = [...new Set(labels)];
            
            if (uniqueLabels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: uniqueLabels
              });
              
              console.log(`✅ Added labels: ${uniqueLabels.join(', ')}`);
            } else {
              console.log('ℹ️ No labels to add');
            }

